" Reactivating arrow keys
noremap <Left> h
noremap <Right> l
noremap <Up> k
noremap <Down> j

" Remove that 80 character limit and that column
set textwidth=0
set colorcolumn=0

" Color scheme
colorscheme Tomorrow-Night
set background=dark
highlight Normal ctermbg=black

" vim-airline config
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline_powerline_fonts = 1
set laststatus=2

" Custom key mappings
nmap          <C-W>+     <C-W>+<SID>ws
nmap          <C-W>-     <C-W>-<SID>ws
nn <script>   <SID>ws+   <C-W>+<SID>ws
nn <script>   <SID>ws-   <C-W>-<SID>ws
nmap          <C-W>>     <C-W>><SID>ws
nmap          <C-W><     <C-W><<SID>ws
nn <script>   <SID>ws>   <C-W>><SID>ws
nn <script>   <SID>ws<   <C-W><<SID>ws
nmap          <SID>ws    <Nop>

" Search files
nmap <C-P> :FZF<ENTER>

" NERDTree commands
nnoremap <leader>nt :NERDTreeToggle<CR>
nnoremap <leader>nf :NERDTreeFind<CR>

" Easymotion
map m <Plug>(easymotion-s)

" Buffers
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>
nnoremap <C-X> :bp <BAR> bd #<CR>
nnoremap <leader>p :Buffers<CR>
nmap <leader>bs :ls<CR>
set hidden " Hide buffers when they are abandoned

nnoremap <leader>gb :Gblame<CR>
nnoremap <C-]> g<C-]>

set tags=./tags,tags;
set wildignore+=log/**

" Scratch plugin
let g:scratch_autohide = 1

" ALE settings
highlight link ALEWarning NONE
highlight link ALEError NONE
highlight ALEErrorSign ctermfg=255 ctermbg=124 guifg=#fb4934 guibg=#3c3836
highlight ALEWarningSign ctermfg=255 ctermbg=130 guifg=#fe8019 guibg=#3c3836
let g:airline#extensions#ale#enabled = 0
" ALE - By default this was detecting brakeman and causing very high CPU usage
let g:ale_linters = {
\   'ruby': ['ruby', 'rubocop']
\}
let g:ale_echo_msg_format = '[%linter%] %s'

" copy to clipboard
set clipboard+=unnamedplus

let g:ag_highlight=1

" indent guides
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1

" grep globally/in file shortcuts
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>
nnoremap <leader>k :Ag '<C-R><C-W>'<Space>
nnoremap <leader>/ /<C-R><C-W><CR>

set re=1
autocmd FileType css,scss,sass setlocal omnifunc=csscomplete#CompleteCSS

" vim-gitgutter
set updatetime=100

" formatting args/hashes
nnoremap <leader>ff $v%lohc<CR><CR><Up><C-r>"<Esc>:s/,/,\r/g<CR>:'[,']norm ==<CR>:noh<CR>

" vim-tmux-navigator setings
nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <c-j> :TmuxNavigateDown<cr>
nnoremap <silent> <c-k> :TmuxNavigateUp<cr>
nnoremap <silent> <c-l> :TmuxNavigateRight<cr>

" mode change and save made easier
imap jk <esc>
imap kj <esc>
imap <C-s> <esc>:w<cr>

" Keep at least 4 lones below cursor
set scrolloff=4

" Command aliases for typoed commands (accidentally holding shift too long)
command! Q q " Bind :Q to :q
command! W w
command! Qa qa
command! Qw qw
command! Wq wq
command! E e

" Replace old style ruby hashes with new style
map <Leader>> :s<Home>silent! <End>@:\([^: =({})]\+\)\s*=>\s*@\1: @g<CR> :nohlsearch<CR>

" Replace what's under the cursor in entire file
nnoremap <leader>r :%s/<C-R><C-W>//g<Left><Left>

" Jump to alternate and related file
nnoremap <leader>ja :A<cr>
nnoremap <leader>jr :R<cr>

" Copy current file path and line number
nnoremap <leader>y :let @+=expand("%") . ':' . line(".")<CR>

" Neovim ruby support
let g:ruby_host_prog = 'rvm system do neovim-ruby-host'

" Fugitive for GitLab
let g:fugitive_gitlab_domains = ['https://gitlab.com']

" Secret config
if filereadable($HOME . "/.vimrc.secret")
  source ~/.vimrc.secret
endif
